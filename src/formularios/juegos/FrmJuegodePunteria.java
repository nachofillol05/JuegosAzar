package formularios.juegos;

import formularios.Usuario.FrmLobby;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import javax.sound.sampled.*;

/**
 *
 * @author franc
 */
public class FrmJuegodePunteria extends javax.swing.JFrame {

    Timer t;
    int contador = 0;
    int tiempo = 0;
    int puntos = 0;
    boolean partida = false;
    ArrayList<String> datosTxt = new ArrayList();
    String archivo = "RegistroUsuarios.txt";
    String linea;
    String audio;

    public FrmJuegodePunteria(String lineaAnt) {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setAlwaysOnTop(true);
        this.linea = lineaAnt;
        btnObjetivo.setText("X");
        btnObjetivo.setForeground(new Color(255, 0, 0));
        btnObjetivo.setEnabled(false);
        lblFichas.setText("Fichas: " + obtenerPuntos());
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                operarPuntos(obtenerPuntos() + puntos, obtenerPartidas());
                FrmLobby ventanaLobby = new FrmLobby(linea);
                ventanaLobby.setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVolver = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        btnJugar = new javax.swing.JButton();
        btnObjetivo = new javax.swing.JButton();
        lblDecor1 = new javax.swing.JLabel();
        lblDecor2 = new javax.swing.JLabel();
        lblCatch = new javax.swing.JLabel();
        lblFichas = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 352, -1, -1));

        lblTitulo.setText("¡Bienvenido al Juego de Puntería!");
        getContentPane().add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 6, -1, -1));

        btnJugar.setText("Jugar");
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });
        getContentPane().add(btnJugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 352, -1, -1));

        btnObjetivo.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        btnObjetivo.setText("O");
        btnObjetivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnObjetivoMousePressed(evt);
            }
        });
        getContentPane().add(btnObjetivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 165, 35, 35));

        lblDecor1.setForeground(new java.awt.Color(0, 100, 0));
        lblDecor1.setText("************************************************************************************************");
        getContentPane().add(lblDecor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 56, -1, 10));

        lblDecor2.setForeground(new java.awt.Color(0, 100, 0));
        lblDecor2.setText("************************************************************************************************");
        getContentPane().add(lblDecor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 310, -1, 8));
        getContentPane().add(lblCatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 324, 480, 22));

        lblFichas.setText("Fichas: ");
        getContentPane().add(lblFichas, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 340, 22));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoJuegos.jpg"))); // NOI18N
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        FrmLobby ventanaLobby = new FrmLobby(linea);
        ventanaLobby.setVisible(true);
        operarPuntos(obtenerPuntos(), obtenerPartidas());
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
        onOff(false);
        lblCatch.setText("");
        contador = 0;
        puntos = 0;
        setCursor(Cursor.getPredefinedCursor(CROSSHAIR_CURSOR));
        t = new Timer(500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setPosicion();
                contador++;
                if (contador == 10) {
                    lblCatch.setText("Ronda terminada. Usted ganó " + puntos + " fichas.");
                    postPartida();
                    onOff(true);
                    operarPuntos(obtenerPuntos() + puntos, obtenerPartidas());
                    t.stop();
                }
            }
        });
        t.start();


    }//GEN-LAST:event_btnJugarActionPerformed

    private void btnObjetivoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnObjetivoMousePressed
        if (partida) {
            puntos += 10;
            lblCatch.setText("Fichas: " + puntos);
            btnObjetivo.setEnabled(false);
            audio = "..\\audio\\Ultrabling.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnObjetivoMousePressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (partida) {
            audio = "..\\audio\\CrackshotColtShot.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void onOff(boolean x) {
        btnJugar.setEnabled(x);
        btnVolver.setEnabled(x);
        partida = !x;
    }

    private void setPosicion() {
        setLayout(null);
        btnObjetivo.setEnabled(true);
        int X = (int) (Math.random() * (484 - 23 + 1) + 23);
        int Y = (int) (Math.random() * (311 - 105 + 1) + 75);
        btnObjetivo.setLocation(X, Y);
        btnObjetivo.setForeground(new Color(0, 255, 0));
        btnObjetivo.setText("O");
    }

    private void postPartida() {
        setCursor(Cursor.getDefaultCursor());
        btnObjetivo.setForeground(new Color(255, 0, 0));
        btnObjetivo.setText("X");
        btnObjetivo.setEnabled(false);
    }

    public void operarPuntos(int numero, int partidasJugadas) {
        datosTxt = leerArchivo();

        String[] lineaSeparada = linea.split(":");
        limpiarArchivo();
        for (int i = 0; i < datosTxt.size(); i++) {
            if (datosTxt.get(i).contains(":U")) {
                String[] datosSep = datosTxt.get(i).split(":");
                if (lineaSeparada[2].equals(datosSep[2])) {
                    lineaSeparada[0] = numero + "";
                    if (partidasJugadas != 0) {
                        lineaSeparada[1] = partidasJugadas + "";
                    }
                    escribirArchivo((Arrays.toString(lineaSeparada) + "\n").replace("[", "").replace("]", "").replace(", ", ":"));
                } else {
                    escribirArchivo((datosTxt.get(i) + "\n").replace("[", "").replace("]", "").replace(", ", ":"));
                }
            } else {
                escribirArchivo((datosTxt.get(i) + "\n").replace("[", "").replace("]", "").replace(", ", ":"));
            }
        }
        lblFichas.setText(numero + " fichas");
        if (obtenerPuntos() >= 200) {
            btnJugar.setEnabled(false);
            lblCatch.setText("Usted ya tiene suficientes fichas para jugar");
        } else {
            btnJugar.setEnabled(true);
        }
    }

    public ArrayList<String> leerArchivo() {
        ArrayList<String> datos = new ArrayList();
        try {
            BufferedReader leer = new BufferedReader(new FileReader(archivo));
            String lectura = leer.readLine();
            while (lectura != null) {

                datos.add(lectura);
                lectura = leer.readLine();

            }

            return datos;
        } catch (Exception e) {

        }
        return null;
    }

    public int obtenerPartidas() {
        datosTxt = leerArchivo();
        String[] lineaSeparada = linea.split(":");
        for (int i = 0; i < datosTxt.size(); i++) {
            if (datosTxt.get(i).contains(":U")) {
                String[] datosSep = datosTxt.get(i).split(":");
                if (lineaSeparada[2].equals(datosSep[2])) {
                    int partidas = Integer.parseInt(datosSep[1]);
                    return partidas;
                }
            }
        }
        return 0;
    }

    public int obtenerPuntos() {
        datosTxt = leerArchivo();
        String[] lineaSeparada = linea.split(":");
        for (int i = 0; i < datosTxt.size(); i++) {
            if (datosTxt.get(i).contains(":U")) {
                String[] datosSep = datosTxt.get(i).split(":");
                if (lineaSeparada[2].equals(datosSep[2])) {
                    int fichas = Integer.parseInt(datosSep[0]);
                    return fichas;
                }
            }
        }
        return 0;
    }

    public void escribirArchivo(String dato) {

        try ( FileWriter escritor = new FileWriter(archivo, true)) {
            escritor.append(dato);
        } catch (Exception e) {

        }
    }

    public void limpiarArchivo() {
        File archivo = new File("RegistroUsuarios.txt");
        try {
            FileWriter escritor = new FileWriter(archivo, false);
            escritor.write("");

        } catch (Exception ex) {
        }

    }
    
    public void reproducirAudio(String wav) throws LineUnavailableException{
        File file = new File(wav);
        AudioInputStream audioStream = null;
        try {
            audioStream = AudioSystem.getAudioInputStream(file);
        } catch (UnsupportedAudioFileException ex) {
            Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Clip clip = AudioSystem.getClip();
        try {
            clip.open(audioStream);
        } catch (IOException ex) {
            Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
        }
        clip.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnJugar;
    private javax.swing.JButton btnObjetivo;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel lblCatch;
    private javax.swing.JLabel lblDecor1;
    private javax.swing.JLabel lblDecor2;
    private javax.swing.JLabel lblFichas;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
