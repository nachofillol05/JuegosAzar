package formularios.juegos;

import formularios.Usuario.FrmLobby;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.*;
import javax.swing.Timer;

public class TragaFichas extends javax.swing.JFrame {

    ArrayList<String> slots = new ArrayList<String>();
    Timer t1, t2;
    int contador = 0;
    int tiempo = 0;
    int fichasGanadas = 0;
    ArrayList<String> datosTxt = new ArrayList();
    String archivo = "RegistroUsuarios.txt";
    String linea;
    int puntos;
    int partidasJugadas;
    boolean allIn;
    int puntosAll;
    boolean jugar = true;
    int spin = 1;
    int contador2;
    String audio;

    //Image jugar;
    //Image jugando;
    public TragaFichas(String lineaAnt) {
        initComponents();

        this.setResizable(false);
        this.setLocationRelativeTo(null);
        cmbApuesta.removeAllItems();
        cmbApuesta.addItem("1");
        cmbApuesta.addItem("5");
        cmbApuesta.addItem("10");
        cmbApuesta.addItem("50");
        cmbApuesta.addItem("100");
        cmbApuesta.addItem("500");
        cmbApuesta.addItem("1000");
        cmbApuesta.addItem("10000");
        cmbApuesta.addItem("100000");
        cmbApuesta.addItem("1000000");
        cmbApuesta.addItem("All in");

        slots.add("&");
        slots.add("&");
        slots.add("%");
        slots.add("%");
        slots.add("#");
        slots.add("#");
        slots.add("@");
        slots.add("@");
        slots.add("7");
        lblNoFichas.setVisible(false);
        this.linea = lineaAnt;
        puntos = obtenerPuntos();
        lblPuntitos.setText(puntos + " Fichas");
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                operarPuntos(puntos, obtenerPartidas());
                FrmLobby ventanaLobby = new FrmLobby(linea);
                ventanaLobby.setVisible(true);
            }
        });
        btnJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/palancaJugar.jpg")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSlot5 = new javax.swing.JTextField();
        btnVolver = new javax.swing.JButton();
        btnJugar = new javax.swing.JButton();
        cmbApuesta = new javax.swing.JComboBox<>();
        lblTitulo = new javax.swing.JLabel();
        txtSlot2 = new javax.swing.JTextField();
        txtSlot1 = new javax.swing.JTextField();
        txtSlot3 = new javax.swing.JTextField();
        lblReglas1 = new javax.swing.JLabel();
        lblReglas2 = new javax.swing.JLabel();
        lblReglas3 = new javax.swing.JLabel();
        lblReglas4 = new javax.swing.JLabel();
        lblReglas5 = new javax.swing.JLabel();
        lblReglas6 = new javax.swing.JLabel();
        lblCatch = new javax.swing.JLabel();
        lblPuntitos = new javax.swing.JLabel();
        lblNoFichas = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSlot2Ar = new javax.swing.JTextField();
        txtSlot3Ar = new javax.swing.JTextField();
        txtSlot1Ar = new javax.swing.JTextField();
        txtSlot1Ab = new javax.swing.JTextField();
        txtSlot2Ab = new javax.swing.JTextField();
        txtSlot3Ab = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();

        jLabel1.setText("Fichas");

        txtSlot5.setEditable(false);
        txtSlot5.setBackground(new java.awt.Color(150, 0, 0));
        txtSlot5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot5.setForeground(new java.awt.Color(255, 255, 255));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, -1, -1));

        btnJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/palancaJugar.jpg"))); // NOI18N
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });
        getContentPane().add(btnJugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, 78, 78));

        cmbApuesta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cmbApuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, -1, -1));

        lblTitulo.setText("Â¡Bienvenido a la Maquina Tragafichas!");
        getContentPane().add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        txtSlot2.setEditable(false);
        txtSlot2.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot2.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtSlot2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 30, 30));

        txtSlot1.setEditable(false);
        txtSlot1.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot1.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtSlot1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 30, 30));

        txtSlot3.setEditable(false);
        txtSlot3.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot3.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtSlot3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 30, 30));

        lblReglas1.setText("2 iguales   =   $ x 1");
        getContentPane().add(lblReglas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 159, -1));

        lblReglas2.setText("& + & + &   =   $ x 5");
        getContentPane().add(lblReglas2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 159, -1));

        lblReglas3.setText("% + % + %   =   $ x 10");
        getContentPane().add(lblReglas3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 159, -1));

        lblReglas4.setText("# + # + #   =   $ x 20");
        getContentPane().add(lblReglas4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 159, 30));

        lblReglas5.setText("@ + @ + @   =   $ x 50");
        getContentPane().add(lblReglas5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, 159, 30));

        lblReglas6.setText("7 + 7 + 7   =   $ x 100");
        getContentPane().add(lblReglas6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, 150, -1));
        getContentPane().add(lblCatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 262, 22));

        lblPuntitos.setText("0 fichas");
        getContentPane().add(lblPuntitos, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 101, -1));

        lblNoFichas.setForeground(new java.awt.Color(255, 51, 51));
        lblNoFichas.setText("No te alcanzan las fichas");
        getContentPane().add(lblNoFichas, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 139, -1));

        jLabel2.setText("Fichas");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, 37, -1));

        txtSlot2Ar.setEditable(false);
        txtSlot2Ar.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot2Ar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot2Ar.setForeground(new java.awt.Color(153, 153, 0));
        getContentPane().add(txtSlot2Ar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 30, -1));

        txtSlot3Ar.setEditable(false);
        txtSlot3Ar.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot3Ar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot3Ar.setForeground(new java.awt.Color(153, 153, 0));
        getContentPane().add(txtSlot3Ar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 30, -1));

        txtSlot1Ar.setEditable(false);
        txtSlot1Ar.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot1Ar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot1Ar.setForeground(new java.awt.Color(153, 153, 0));
        getContentPane().add(txtSlot1Ar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 30, 30));

        txtSlot1Ab.setEditable(false);
        txtSlot1Ab.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot1Ab.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot1Ab.setForeground(new java.awt.Color(153, 153, 0));
        getContentPane().add(txtSlot1Ab, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 30, 30));

        txtSlot2Ab.setEditable(false);
        txtSlot2Ab.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot2Ab.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot2Ab.setForeground(new java.awt.Color(153, 153, 0));
        getContentPane().add(txtSlot2Ab, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 30, 30));

        txtSlot3Ab.setEditable(false);
        txtSlot3Ab.setBackground(new java.awt.Color(253, 214, 72));
        txtSlot3Ab.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSlot3Ab.setForeground(new java.awt.Color(153, 153, 0));
        getContentPane().add(txtSlot3Ab, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 30, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tablero tragafichas si.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 290, 230));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Premios tragafichas.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, -1, 170));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoJuegos.jpg"))); // NOI18N
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        FrmLobby ventanaLobby = new FrmLobby(linea);
        ventanaLobby.setVisible(true);
        this.dispose();
        operarPuntos(puntos, obtenerPartidas());
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
        if (jugar) {
            audio = "..\\audio\\Item_108.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
            boolean seguir = false;
            if (cmbApuesta.getSelectedItem().toString().equals("All in")) {
                if (obtenerPuntos() != 0) {
                    lblNoFichas.setVisible(false);
                    puntosAll = puntos;
                    puntos = 0;
                    allIn = true;
                    partidasJugadas = obtenerPartidas() + 1;
                    seguir = true;
                } else {
                    lblNoFichas.setText("No tenes fichas");
                    lblNoFichas.setVisible(true);
                    seguir = false;
                }

            } else {
                if ((puntos - Integer.parseInt(cmbApuesta.getSelectedItem().toString())) >= 0) {
                    lblNoFichas.setVisible(false);
                    puntos -= Integer.parseInt(cmbApuesta.getSelectedItem().toString());
                    seguir = true;
                } else {
                    lblNoFichas.setText("No te alcanzan fichas");
                    lblNoFichas.setVisible(true);
                    seguir = false;
                }
            }
            if (seguir) {

                partidasJugadas = obtenerPartidas() + 1;
                operarPuntos(puntos, partidasJugadas);
                jugar = false;
                onOff(false);
                lblCatch.setText("");
                contador = 0;
                audio = "..\\audio\\SevensStrikerRoulette.wav";
                try {
                    reproducirAudio(audio);
                } catch (LineUnavailableException ex) {
                    Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
                }

                t1 = new Timer(100, new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (spin == 1) {
                            spin();
                            spin++;
                        } else if (spin == 2) {
                            spin2();
                            spin++;
                        } else {
                            spin3();
                        }
                        contador++;
                        if (contador == 17) {
                            t1.stop();
                            t2.start();
                        }
                    }
                });
                contador2 = 0;
                t2 = new Timer(350, new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        spin3();
                        contador2++;
                        if (contador2 >= 3) {
                            t2.stop();
                            onOff(true);
                            btnJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/palancaJugar.jpg")));
                            jugar = true;
                            check();
                        }
                    }
                });
                t1.start();

            }
        }
    }//GEN-LAST:event_btnJugarActionPerformed

    private void onOff(boolean x) {
        cmbApuesta.setEnabled(x);
        btnVolver.setEnabled(x);
        jugar = x;
        if (x) {
            btnJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/palancaJugar.jpg")));
        } else {
            btnJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/palancaJugando.jpg")));
        }

    }

    private void spin() {
        int valor = (int) (Math.random() * (8 - 0 + 1) + 0);
        String icono = slots.get(valor);
        txtSlot1Ar.setText(icono);
        valor = (int) (Math.random() * (8 - 0 + 1) + 0);
        icono = slots.get(valor);
        txtSlot2Ar.setText(icono);
        valor = (int) (Math.random() * (8 - 0 + 1) + 0);
        icono = slots.get(valor);
        txtSlot3Ar.setText(icono);

    }

    public void spin2() {
        txtSlot1.setText(txtSlot1Ar.getText());
        txtSlot2.setText(txtSlot2Ar.getText());
        txtSlot3.setText(txtSlot3Ar.getText());
        spin();
    }

    public void spin3() {
        txtSlot1Ab.setText(txtSlot1.getText());
        txtSlot2Ab.setText(txtSlot2.getText());
        txtSlot3Ab.setText(txtSlot3.getText());
        spin2();
    }

    private void check() {
        if (txtSlot1.getText().toString().equals("&") && txtSlot2.getText().toString().equals("&") && txtSlot3.getText().toString().equals("&")) {

            if (allIn) {
                fichasGanadas = puntosAll * 5;
                puntos = puntosAll * 5;
            } else {
                fichasGanadas = (int) (Integer.valueOf((String) cmbApuesta.getSelectedItem()) * 5);
                puntos += fichasGanadas;
            }
            lblCatch.setText("Â¡Felicidades, usted ganÃ³ " + fichasGanadas + "!");
            operarPuntos(puntos, obtenerPartidas());
            audio = "..\\audio\\SevensStrikerTriples.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (txtSlot1.getText().toString().equals("%") && txtSlot2.getText().toString().equals("%") && txtSlot3.getText().toString().equals("%")) {

            if (allIn) {
                fichasGanadas = puntosAll * 10;
                puntos = puntosAll * 10;
            } else {
                fichasGanadas = (int) (Integer.valueOf((String) cmbApuesta.getSelectedItem()) * 10);
                puntos += fichasGanadas;
            }
            lblCatch.setText("Â¡Felicidades, usted ganÃ³ " + fichasGanadas + "!");
            operarPuntos(puntos, obtenerPartidas());
            audio = "..\\audio\\SevensStrikerTriples.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (txtSlot1.getText().toString().equals("#") && txtSlot2.getText().toString().equals("#") && txtSlot3.getText().toString().equals("#")) {
            if (allIn) {
                fichasGanadas = puntosAll * 20;
                puntos = puntosAll * 20;
            } else {
                fichasGanadas = (int) (Integer.valueOf((String) cmbApuesta.getSelectedItem()) * 20);
                puntos += fichasGanadas;
            }
            lblCatch.setText("Â¡Felicidades, usted ganÃ³ " + fichasGanadas + "!");
            operarPuntos(puntos, obtenerPartidas());
            audio = "..\\audio\\SevensStrikerTriples.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (txtSlot1.getText().toString().equals("@") && txtSlot2.getText().toString().equals("@") && txtSlot3.getText().toString().equals("@")) {
            if (allIn) {
                fichasGanadas = puntosAll * 50;
                puntos = puntosAll * 50;
            } else {
                fichasGanadas = (int) (Integer.valueOf((String) cmbApuesta.getSelectedItem()) * 50);
                puntos += fichasGanadas;
            }
            lblCatch.setText("Â¡Felicidades, usted ganÃ³ " + fichasGanadas + "!");
            operarPuntos(puntos, obtenerPartidas());
        } else if (txtSlot1.getText().toString().equals("7") && txtSlot2.getText().toString().equals("7") && txtSlot3.getText().toString().equals("7")) {
            if (allIn) {
                fichasGanadas = puntosAll * 100;
                puntos = puntosAll * 100;
            } else {
                fichasGanadas = (int) (Integer.valueOf((String) cmbApuesta.getSelectedItem()) * 100);
                puntos += fichasGanadas;
            }
            lblCatch.setText("Â¡Felicidades, usted ganÃ³ " + fichasGanadas + " QUE GRAN PREMIO!");
            operarPuntos(puntos, obtenerPartidas());
            audio = "..\\audio\\SevensStrikerJackpot.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (txtSlot1.getText().toString().equals(txtSlot2.getText().toString()) || txtSlot2.getText().toString().equals(txtSlot3.getText().toString()) || txtSlot3.getText().toString().equals(txtSlot1.getText().toString())) {
            if (allIn) {
                fichasGanadas = puntosAll;
                puntos = puntosAll;

            } else {
                fichasGanadas = (int) (Integer.valueOf((String) cmbApuesta.getSelectedItem()));
                puntos += fichasGanadas;
            }
            lblCatch.setText("Â¡Recuperaste las fichas apostadas!");
            operarPuntos(puntos, obtenerPartidas());
            audio = "..\\audio\\SevensStrikerDoubles.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblCatch.setText("Lamentablemente, usted no ganÃ³ nada");
            audio = "..\\audio\\SevensStrikerBust.wav";
            try {
                reproducirAudio(audio);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void operarPuntos(int numero, int partidasJugadas) {
        datosTxt = leerArchivo();

        String[] lineaSeparada = linea.split(":");
        limpiarArchivo();
        for (int i = 0; i < datosTxt.size(); i++) {
            if (datosTxt.get(i).contains(":U")) {
                String[] datosSep = datosTxt.get(i).split(":");

                if (lineaSeparada[2].equals(datosSep[2])) {

                    lineaSeparada[0] = numero + "";
                    if (partidasJugadas != 0) {
                        lineaSeparada[1] = partidasJugadas + "";
                    }

                    escribirArchivo((Arrays.toString(lineaSeparada) + "\n").replace("[", "").replace("]", "").replace(", ", ":"));

                } else {
                    escribirArchivo((datosTxt.get(i) + "\n").replace("[", "").replace("]", "").replace(", ", ":"));
                }
            } else {
                escribirArchivo((datosTxt.get(i) + "\n").replace("[", "").replace("]", "").replace(", ", ":"));
            }
        }
        lblPuntitos.setText(numero + " fichas");
    }

    public ArrayList<String> leerArchivo() {
        ArrayList<String> datos = new ArrayList();
        try {
            BufferedReader leer = new BufferedReader(new FileReader(archivo));
            String lectura = leer.readLine();
            while (lectura != null) {

                datos.add(lectura);
                lectura = leer.readLine();

            }

            return datos;
        } catch (Exception e) {

        }
        return null;
    }

    public int obtenerPartidas() {
        datosTxt = leerArchivo();
        String[] lineaSeparada = linea.split(":");
        for (int i = 0; i < datosTxt.size(); i++) {

            if (datosTxt.get(i).contains(":U")) {
                String[] datosSep = datosTxt.get(i).split(":");

                if (lineaSeparada[2].equals(datosSep[2])) {
                    int partidas = Integer.parseInt(datosSep[1]);
                    return partidas;
                }
            }
        }
        return 0;
    }

    public int obtenerPuntos() {
        datosTxt = leerArchivo();
        String[] lineaSeparada = linea.split(":");
        for (int i = 0; i < datosTxt.size(); i++) {

            if (datosTxt.get(i).contains(":U")) {
                String[] datosSep = datosTxt.get(i).split(":");
                if (lineaSeparada[2].equals(datosSep[2])) {
                    int fichas = Integer.parseInt(datosSep[0]);
                    return fichas;
                }
            }
        }
        return 0;

    }

    public void escribirArchivo(String dato) {

        try ( FileWriter escritor = new FileWriter(archivo, true)) {
            escritor.append(dato);
        } catch (Exception e) {

        }
    }

    public void limpiarArchivo() {
        File archivo = new File("RegistroUsuarios.txt");
        try {
            FileWriter escritor = new FileWriter(archivo, false);
            escritor.write("");

        } catch (Exception ex) {
        }

    }
    
    public void reproducirAudio(String wav) throws LineUnavailableException{
        File file = new File(wav);
        AudioInputStream audioStream = null;
        try {
            audioStream = AudioSystem.getAudioInputStream(file);
        } catch (UnsupportedAudioFileException ex) {
            Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Clip clip = AudioSystem.getClip();
        try {
            clip.open(audioStream);
        } catch (IOException ex) {
            Logger.getLogger(TragaFichas.class.getName()).log(Level.SEVERE, null, ex);
        }
        clip.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnJugar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbApuesta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblCatch;
    private javax.swing.JLabel lblNoFichas;
    private javax.swing.JLabel lblPuntitos;
    private javax.swing.JLabel lblReglas1;
    private javax.swing.JLabel lblReglas2;
    private javax.swing.JLabel lblReglas3;
    private javax.swing.JLabel lblReglas4;
    private javax.swing.JLabel lblReglas5;
    private javax.swing.JLabel lblReglas6;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtSlot1;
    private javax.swing.JTextField txtSlot1Ab;
    private javax.swing.JTextField txtSlot1Ar;
    private javax.swing.JTextField txtSlot2;
    private javax.swing.JTextField txtSlot2Ab;
    private javax.swing.JTextField txtSlot2Ar;
    private javax.swing.JTextField txtSlot3;
    private javax.swing.JTextField txtSlot3Ab;
    private javax.swing.JTextField txtSlot3Ar;
    private javax.swing.JTextField txtSlot5;
    // End of variables declaration//GEN-END:variables
}
